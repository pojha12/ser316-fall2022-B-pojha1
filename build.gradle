plugins {
//     id "com.github.spotbugs" version "5.0.12"
//     id "checkstyle"
//	id "jacoco"
    id 'pmd'
}

apply plugin: 'application'
apply plugin: 'jacoco'


mainClassName = 'Main'


// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    implementation "junit:junit:4.12"
    implementation files('cls/')
}

test {
	exclude '**/BlackBoxGiven.class'
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(18)
	}
}	

apply plugin: "pmd"
pmd {
  ignoreFailures = true 
  sourceSets = [sourceSets.main]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSets = []
  ruleSetConfig = resources.text.fromFile('ruleset.xml')
}


// jacocoTestReport {
//     dependsOn test // tests are required to run before generating the report
    
//     afterEvaluate {
//         classDirectories.setFrom(files(classDirectories.files.collect {
//             fileTree(dir: it, exclude: ['**Main.class', '**TDD.class', '**WhiteBoxGiven.class'])
//         }))
//     }
// }

///////////////////////////////////////////////////////////////////////
// Configure Checkstyle
/////////////////////////////////////////////////////////////////////

//  apply plugin: 'checkstyle'
//  checkstyle {
// //   // Keep checkstyle a little quieter
//    ignoreFailures = true
//    showViolations = false
//  }

//  tasks.withType(Checkstyle) {
//    reports {
//      html.enabled = true
//      xml.enabled = false
//    }
//  }
//  checkstyle {
//      toolVersion = "8.8"
//  }

// apply plugin: 'checkstyle'
// checkstyle {
	// Keep checkstyle a little quieter
// 	ignoreFailures = true
// 	showViolations = false
// }

// tasks.withType(Checkstyle) {
// 	reports {
// 		html.enabled = true
// 		xml.enabled = false
//   }
// }
// checkstyle {
// 	toolVersion = "8.8"
// }
// tasks.withType(Checkstyle).each {
//     it.group = 'verification'
// }



///////////////////////////////////////////////////////////////////////
// Configure SpotBugs
///////////////////////////////////////////////////////////////////////
// To generate an HTML report instead of XML
//  spotbugsMain {
//      reports {
//          xml.enabled = false
//          html.enabled = true
//      }
//  }
//  spotbugs {
//      ignoreFailures = true
//      showProgress = true
//      effort = 'max'
//  }